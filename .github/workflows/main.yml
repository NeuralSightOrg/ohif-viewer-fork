name: Comprehensive Docker Build and Deploy to EC2

on:
  push:
    branches: [ dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Copy all files (including hidden) to EC2 with conditional cleanup
      env:
        PRIVATE_KEY: ${{ secrets.AWS_VM_SSH_KEY }}
        HOST: ${{ secrets.AWS_VM_HOST }}
        USER: ${{ secrets.AWS_VM_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} 'sudo rm -rf ~/app_ohif_tmp && mkdir -p ~/app_ohif_tmp'
        rsync -avz --exclude='.git' -e "ssh -i private_key -o StrictHostKeyChecking=no" ./ ${USER}@${HOST}:~/app_ohif_tmp/
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
          if [ "$(ls -A /var/www/html/ohif-viewer/app)" ]; then
            echo "Files found in destination. Removing..."
            sudo rm -rf /var/www/html/ohif-viewer/app/*
          else
            echo "Destination is empty. Continuing..."
          fi
          sudo mv ~/app_ohif_tmp/* /var/www/html/ohif-viewer/app/ 2>/dev/null || true
          sudo rm -rf ~/app_ohif_tmp
        '

    - name: Build and run Docker container on EC2
      env:
        PRIVATE_KEY: ${{ secrets.AWS_VM_SSH_KEY }}
        HOST: ${{ secrets.AWS_VM_HOST }}
        USER: ${{ secrets.AWS_VM_USERNAME }}
      run: |
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
          cd /var/www/html/ohif-viewer/app
          
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found in expected location!"
            exit 1
          fi
          
         
          docker build . -t ohif-viewer-image 
          
          if [ $(docker ps -q -f name=ohif-viewer-container) ]; then
            echo "Stopping existing container..."
            docker stop ohif-viewer-container
          fi
          
          if [ $(docker ps -a -q -f name=ohif-viewer-container) ]; then
            echo "Removing existing container and its volumes..."
            docker rm -v ohif-viewer-container
          fi
          
          docker run -d -p 3000:80/tcp \
            -v /var/www/html/ohif-viewer/default.js:/usr/share/nginx/html/app-config.js \
            --name ohif-viewer-container ohif-viewer-image
        '

    - name: Cleanup
      run: rm -f private_key
