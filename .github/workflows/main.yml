name: React Docker Build and Deploy to EC2

on:
  push:
    branches: [ dev ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Install dependencies
      run: yarn install
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: false
        tags: ohif-viewer:latest
        outputs: type=docker,dest=/tmp/ohif-viewer.tar

    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.AWS_VM_SSH_KEY }}
        HOST: ${{ secrets.AWS_VM_HOST }}
        USER: ${{ secrets.AWS_VM_USERNAME }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        
        # Copy the Docker image to EC2
        scp -i private_key -o StrictHostKeyChecking=no /tmp/ohif-viewer.tar ${USER}@${HOST}:~/ohif-viewer.tar
        
        # SSH into EC2, load the image, stop old container, start new one
        ssh -i private_key -o StrictHostKeyChecking=no ${USER}@${HOST} '
          docker load < ~/ohif-viewer.tar
          docker stop ohif-viewer || true
          docker rm ohif-viewer || true
          docker run -d -v --name ohif-viewer -p 3000:80 ohif-viewer:latest
          rm ~/ohif-viewer.tar
        '

    - name: Cleanup
      run: rm -f private_key
